openapi: 3.0.3
info:
  title: Online Market
  version: 1.0.0
  description: Online Market for sellers and buyers
paths:
  /api/v1/buyer/orders:
    get:
      operationId: get_buyer_orders
      description: Получить историю заказов покупателя
      summary: Получить историю заказов покупателя
      tags:
      - Покупатель
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    post:
      operationId: confirm_buyer_order
      description: Подтверждение заказа покупателя. В теле запроса передается id заказа,
        id контакта и код купона (опционально)
      summary: Подтверждение заказа покупателя
      tags:
      - Покупатель
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderConfirm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/buyer/shoppingcart:
    get:
      operationId: get_shopping_cart
      description: Получить список товаров в корзине
      summary: Получить список товаров в корзине
      tags:
      - Покупатель
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    post:
      operationId: create_shopping_cart
      description: Создание/обновление корзины покупателя
      summary: Создание/обновление корзины покупателя
      tags:
      - Покупатель
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemCreateUpdate'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    put:
      operationId: update_shopping_cart
      description: Изменение количества товаров в корзине покупателя
      summary: Изменение количества товаров в корзине покупателя
      tags:
      - Покупатель
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemUpdate'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemUpdate'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    delete:
      operationId: delete_shopping_cart
      description: Удаление товаров из корзины покупателя
      summary: Удаление товаров из корзины покупателя
      tags:
      - Покупатель
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: No content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/manager/coupons:
    get:
      operationId: get_coupons
      description: Получить список скидочных купонов
      summary: Получить список скидочных купонов
      tags:
      - Менеджер
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    post:
      operationId: create_coupon
      description: Создание скидочного купона
      summary: Создание скидочного купона
      tags:
      - Менеджер
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    put:
      operationId: update_coupon
      description: Обновление скидочного купона
      summary: Обновление скидочного купона
      tags:
      - Менеджер
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    delete:
      operationId: delete_coupon
      description: Удаление скидочного купона
      summary: Удаление скидочного купона
      tags:
      - Менеджер
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: No content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/manager/orders:
    get:
      operationId: get_manager_orders
      description: Получить список заказов
      summary: Получить список заказов
      tags:
      - Менеджер
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    put:
      operationId: update_manager_order
      description: Обновление статуса заказа
      summary: Обновление статуса заказа
      tags:
      - Менеджер
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderState'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderState'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderState'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/products:
    get:
      operationId: get_products
      description: Получить список всех товаров
      summary: Получить список всех товаров
      parameters:
      - in: query
        name: category_id
        schema:
          type: integer
        description: Фильтр по id категории товаров
      - in: query
        name: ordering
        schema:
          type: string
        description: Сортировка по id или price (цене)
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Поиск по названию товара
      - in: query
        name: shop_id
        schema:
          type: integer
        description: Фильтр по id магазина
      tags:
      - Товары
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductItemList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/products/categories:
    get:
      operationId: get_category
      description: Получить список категорий товаров
      summary: Получить список категорий товаров
      parameters:
      - in: query
        name: id
        schema:
          type: integer
        description: Фильтр по id категории
      - in: query
        name: ordering
        schema:
          type: string
        description: Сортировка по id или name
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Поиск по названию категории
      tags:
      - Товары
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/products/popular:
    get:
      operationId: get_popular_products
      description: Получить список наиболее популярных товаров
      summary: Получить список наиболее популярных товаров
      parameters:
      - in: query
        name: amount
        schema:
          type: integer
        description: Количество популярных товаров
      tags:
      - Товары
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/seller/goods:
    post:
      operationId: import_seller_products
      description: Импорт товаров магазина
      summary: Импорт товаров магазина
      tags:
      - Продавец
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportGoods'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImportGoods'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportGoods'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/seller/orders:
    get:
      operationId: get_seller_orders
      description: Получить список заказов продавца
      summary: Получить список заказов продавца
      tags:
      - Продавец
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/seller/products:
    get:
      operationId: get_seller_products
      description: Получить список всех товаров магазина
      summary: Получить список всех товаров магазина
      tags:
      - Продавец
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductItem'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/seller/shop:
    post:
      operationId: create_shop
      description: Создание магазина для продавца
      summary: Создание магазина для продавца
      tags:
      - Продавец
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/seller/status:
    get:
      operationId: get_seller_status
      description: Получить текущий статус магазина
      summary: Получить текущий статус магазина
      tags:
      - Продавец
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    post:
      operationId: change_seller_status
      description: Изменение текущего статуса магазина
      summary: Изменение текущего статуса магазина
      tags:
      - Продавец
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSellerStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeSellerStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeSellerStatus'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/shops:
    get:
      operationId: get_shops
      description: Получить список всех магазинов
      summary: Получить список всех магазинов
      parameters:
      - in: query
        name: id
        schema:
          type: integer
        description: Фильтр по id магазина
      - in: query
        name: ordering
        schema:
          type: string
        description: Сортировка по id или name (названию магазина)
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Поиск по названию магазина
      tags:
      - Магазины
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/account:
    get:
      operationId: get_users_account
      description: Получить информацию об аккаунте пользователя
      summary: Получить информацию об аккаунте пользователя
      tags:
      - Пользователи
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    post:
      operationId: change_users_account
      description: Изменение информации об аккаунте пользователя
      summary: Изменение информации об аккаунте пользователя
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/contact:
    get:
      operationId: get_сontact
      description: Получить информацию о контактах пользователя
      summary: Получить информацию о контактах пользователя
      tags:
      - Пользователи
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    post:
      operationId: create_сontact
      description: Создание контакта пользователя
      summary: Создание контакта пользователя
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactCreate'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    put:
      operationId: update_сontact
      description: Обновление контакта пользователя
      summary: Обновление контакта пользователя
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
    delete:
      operationId: delete_сontact
      description: Удаление контакта пользователя
      summary: Удаление контакта пользователя
      tags:
      - Пользователи
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: No content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/login:
    post:
      operationId: token_obtain
      description: Получение пары access/refresh токенов
      summary: Получение токена доступа
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/login/refresh:
    post:
      operationId: token_refresh
      description: Повторное получение пары access/refresh токенов
      summary: Повторное получение токена доступа
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/password_reset:
    post:
      operationId: reset_password
      description: Сброс пароля пользователя
      summary: Сброс пароля пользователя
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/password_reset/confirm:
    post:
      operationId: confirm_reset_password
      description: Подтверждение сброса пароля пользователя
      summary: Подтверждение сброса пароля пользователя
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmResetPassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/register:
    post:
      operationId: user_register
      description: Регистрация нового пользователя
      summary: Регистрация нового пользователя
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
  /api/v1/user/register/confirm:
    post:
      operationId: confirm_user_account
      description: Подтверждение аккаунта пользователя
      summary: Подтверждение аккаунта пользователя
      tags:
      - Пользователи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmUserAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmUserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmUserAccount'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название категории
          maxLength: 80
      required:
      - id
      - name
    ChangeSellerStatus:
      type: object
      properties:
        is_active:
          type: boolean
      required:
      - is_active
    ConfirmResetPassword:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
          maxLength: 60
      required:
      - password
      - token
    ConfirmUserAccount:
      type: object
      properties:
        email:
          type: string
          format: email
        token:
          type: string
          maxLength: 60
      required:
      - email
      - token
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          writeOnly: true
          title: Пользователь
        phone:
          type: string
          title: Номер телефона
          maxLength: 20
        country:
          type: string
          nullable: true
          title: Страна
          maxLength: 30
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 60
        house:
          type: string
          title: Номер дома
          maxLength: 20
        apartment:
          type: string
          title: Квартира
          maxLength: 20
        structure:
          type: string
          nullable: true
          title: Корпус
          maxLength: 20
        building:
          type: string
          nullable: true
          title: Строение
          maxLength: 20
      required:
      - id
    ContactCreate:
      type: object
      properties:
        phone:
          type: string
          title: Номер телефона
          maxLength: 20
        country:
          type: string
          nullable: true
          title: Страна
          maxLength: 30
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 60
        house:
          type: string
          title: Номер дома
          maxLength: 20
        apartment:
          type: string
          title: Квартира
          maxLength: 20
        structure:
          type: string
          nullable: true
          title: Корпус
          maxLength: 20
        building:
          type: string
          nullable: true
          title: Строение
          maxLength: 20
    ContactUpdate:
      type: object
      properties:
        id:
          type: integer
        phone:
          type: string
          title: Номер телефона
          maxLength: 20
        country:
          type: string
          nullable: true
          title: Страна
          maxLength: 30
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 60
        house:
          type: string
          title: Номер дома
          maxLength: 20
        apartment:
          type: string
          title: Квартира
          maxLength: 20
        structure:
          type: string
          nullable: true
          title: Корпус
          maxLength: 20
        building:
          type: string
          nullable: true
          title: Строение
          maxLength: 20
      required:
      - id
    Coupon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          title: Код купона
          maxLength: 60
        valid_from:
          type: string
          format: date-time
          title: Дата начала действия купона
        valid_to:
          type: string
          format: date-time
          title: Дата окончания действия купона
        discount:
          type: integer
          maximum: 100
          minimum: 0
          title: Скидка
          description: В процентах от 0 до 100
        active:
          type: boolean
          title: Активен
      required:
      - code
      - discount
      - id
    CouponCreate:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
        code:
          type: string
          title: Код купона
          maxLength: 60
        valid_from:
          type: string
          format: date-time
          title: Дата начала действия купона
        valid_to:
          type: string
          format: date-time
          title: Дата окончания действия купона
        discount:
          type: integer
          maximum: 100
          minimum: 0
          title: Скидка
          description: В процентах от 0 до 100
        active:
          type: boolean
          title: Активен
      required:
      - code
      - discount
      - id
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: string
      required:
      - error
    ImportGoods:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
      - url
    OKResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ordered_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания заказа
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: Состояние заказа
        contact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - contact
      - created_at
      - id
      - ordered_items
      - total_price
    OrderConfirm:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
        contact:
          type: integer
          minimum: 0
        coupon_code:
          type: string
          nullable: true
          maxLength: 60
      required:
      - contact
      - id
    OrderItemCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          writeOnly: true
          title: Заказ
        product_item:
          allOf:
          - $ref: '#/components/schemas/ProductItem'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
      required:
      - id
      - order
      - product_item
    OrderItemCreateUpdate:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 10000
          minimum: 1
          default: 1
        product_item:
          type: integer
          minimum: 0
      required:
      - product_item
    OrderItemUpdate:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
        quantity:
          type: integer
          maximum: 10000
          minimum: 1
      required:
      - id
      - quantity
    OrderState:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
        state:
          $ref: '#/components/schemas/StateEnum'
      required:
      - id
      - state
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedProductItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
    PaginatedShopList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название продукта
          maxLength: 100
        category:
          type: string
          readOnly: true
      required:
      - category
      - id
      - name
    ProductItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        shop:
          type: integer
          title: Магазин
        quantity:
          type: integer
          maximum: 10000
          minimum: 0
          title: Количество
        preview:
          type: string
          format: uri
          nullable: true
          title: Превью
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Цена продукта
        price_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Розничная цена продукта
        product_properties:
          type: array
          items:
            $ref: '#/components/schemas/ProductProperty'
          readOnly: true
      required:
      - id
      - price
      - product
      - product_properties
      - shop
    ProductProperty:
      type: object
      properties:
        property:
          type: string
          readOnly: true
        value:
          type: string
          title: Значение свойства
          maxLength: 100
      required:
      - property
      - value
    ResetPassword:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название магазина
          maxLength: 100
        url:
          type: string
          format: uri
          nullable: true
          title: Ссылка на файл продуктов магазина
          maxLength: 300
        description:
          type: string
          nullable: true
          title: Описание магазина
        is_active:
          type: boolean
      required:
      - id
      - name
    StateEnum:
      enum:
      - PREPARING
      - CREATED
      - CONFIRMED
      - ASSEMBLED
      - SENT
      - DELIVERED
      - CANCELED
      type: string
      description: |-
        * `PREPARING` - Подготавливается
        * `CREATED` - Создан
        * `CONFIRMED` - Подтвержден
        * `ASSEMBLED` - Собран
        * `SENT` - Отправлен
        * `DELIVERED` - Доставлен
        * `CANCELED` - Отменен
    TokenObtainRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    TokenObtainResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    TypeEnum:
      enum:
      - SL
      - BR
      type: string
      description: |-
        * `SL` - Seller
        * `BR` - Buyer
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 80
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Тип пользователя
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          readOnly: true
      required:
      - contacts
      - email
      - id
      - username
    UserCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 80
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Тип пользователя
      required:
      - email
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
